Gopher is a very simple network protocol that was widely popular before the web took off.
It basically works like the `finger` protocol, but on port 70: use telnet to connect
and send a "selector" and a newline, and the server sends back some text. Done.

Gopher also came with the idea of special "maps". These are files that work like directory
indices.

Emacs has at least two Gopher client implementations:

* [https://github.com/msnyder-info/gopher.el gopher.el]
* [https://thelambdalab.xyz/elpher/ Elpher Gopher Client]

And some customization examples:

* [[Up command for Elpher]]

== Recommendations ==

[new]
I recommend Elpher. -- [[Alex Schroeder]]

[new]
Both of them are merely rudimentary implementations which do only support very limited subsets of Gopher link types.  Yet, Elpher is the better one — technically, ie., seen from lisp coding standards.  But gopher.el is much faster and more easily extendable to add the missing link types (and the type hints in the buffer display), yet misses customization options.  Elpher takes several seconds or longer to retrieve a single item, which ought to take place within tenths of a second.
  —mangledmind
